{"version":3,"sources":["components/MenuToggle/MenuToggle.js","components/UI/Backdrop/Backdrop.js","components/Drawer/Drawer.js","hoc/Layout/Layout.js","components/AnswerItem/AnswerItem.js","components/AnswersList/AnswersList.js","components/ActiveQuiz/ActiveQuiz.js","components/UI/Button/Button.js","components/FinishedQuiz/FinishedQuiz.js","components/UI/Loader/Loader.js","axiosInstance/axiosInstance.js","store/actions/quize.js","store/actions/actionsType.js","containers/Quize/Quiz.js","components/UI/Input/Input.js","containers/Auth/Auth.js","form/formFramework.js","components/UI/Select/Select.js","containers/QuizCreator/QuizCreator.js","store/actions/create.js","containers/QuizList/QuizList.js","App.js","serviceWorker.js","store/reducers/quiz.js","store/reducers/create.js","store/reducers/rootReducer.js","index.js"],"names":["MenuToggle","onToggle","isOpen","className","classNames","onClick","Backdrop","Drawer","links","to","label","exact","renderLinks","map","link","index","key","props","handleBackDrop","this","Component","Layout","state","isMenuOpen","handlerToggleMenu","setState","children","AnswerItem","answer","onAnswerClickHandle","id","text","AnswersList","answers","ActiveQuiz","question","answerNumber","quizLength","Button","customClass","disabled","FinishedQuiz","results","quiz","onRetry","quizItem","i","counter","counterOfSuccess","length","Loader","axios","create","baseURL","fetchQuizesStart","type","fetchQuizesSuccess","quizes","payload","fetchQuizSuccess","quizAnswerClick","answerId","dispatch","getState","activeQuestion","answerState","Object","keys","rightAnswerId","quizSetState","activeNumber","Quiz","fetchQuizById","match","params","retryQuiz","isFinished","isLoading","console","log","connect","loading","quizId","a","method","url","response","data","error","Input","value","onChange","errorMessage","touched","valid","shouldValidate","htmlFor","Math","random","isInvalid","validateEmail","email","test","String","toLowerCase","Auth","isFromValid","formControls","validationRules","required","minLength","password","handlerLogin","returnSecureToken","handlerRegister","handlerSubmit","e","preventDefault","handlerOnChange","controlName","control","validateControl","isValid","trim","onSubmit","target","createControl","config","validation","validate","validateForm","isFormValid","hasOwnProperty","Select","options","accessKey","option","createFormControls","option1","option2","option3","option4","QuizCreator","handleSubmit","handlerAddQuestion","createQuizQuestion","handlerCreateQuestion","finishCreateQuiz","renderInputs","currentControl","handlerChangeInput","handlerSelectChange","rightAnswer","item","QuizList","fetchQuizes","name","push","App","path","component","Boolean","window","location","hostname","initialState","combineReducers","action","err","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","RootReducer","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.da3d0fba.chunk.js","sourcesContent":["import React from 'react';\nimport './MenuToggle.sass';\nimport classNames from 'classnames';\n\nconst MenuToggle = ({onToggle, isOpen}) => {\n  return (\n    <i\n      className={classNames({\n        'MenuToggle fa': true,\n        'fa-times MenuToggle--Open': isOpen,\n        'fa-bars': !isOpen\n      })}\n      onClick={onToggle}\n    >\n\n    </i>\n  );\n};\n\nexport default MenuToggle;\n","import React from 'react';\nimport './Backdrop.sass';\n\nconst Backdrop = ({onClick}) => {\n  return (\n    <div className=\"Backdrop\" onClick={onClick}>\n\n    </div>\n  );\n};\n\nexport default Backdrop;\n","import React, {Component} from 'react';\nimport './Drawer.sass';\nimport classNames from 'classnames';\nimport Backdrop from \"../UI/Backdrop/Backdrop\";\nimport { NavLink } from 'react-router-dom';\n\nclass Drawer extends Component {\n\n  links = [\n    {\n      to: '/',\n      label: 'Список',\n      exact: true\n    },\n    {\n      to: '/auth',\n      label: 'Авторизация',\n      exact: true\n    },\n    {\n      to: '/quiz-creator',\n      label: 'Создать тест',\n      exact: true\n    },\n  ];\n\n  renderLinks = () => {\n    return this.links.map((link, index) => {\n      return (\n        <li key={index} className=\"Drawer__Item\">\n          <NavLink\n            to={link.to}\n            exact={link.exact}\n            onClick={this.props.handleBackDrop}\n          >\n            { link.label}\n          </NavLink>\n        </li>\n      )\n    })\n  };\n\n  render() {\n    const { isOpen, handleBackDrop } = this.props;\n    return (\n      <>\n        <nav className={classNames({\n          'Drawer': true,\n          'Drawer--Close': !isOpen\n        })}>\n          <ul className=\"Drawer__List\">\n            { this.renderLinks() }\n          </ul>\n        </nav>\n        {\n          isOpen &&  <Backdrop\n            onClick={handleBackDrop}\n          />\n        }\n      </>\n    );\n  }\n}\n\nexport default Drawer;\n","import React, {Component} from 'react';\nimport './Layout.sass';\nimport MenuToggle from \"../../components/MenuToggle/MenuToggle\";\nimport Drawer from \"../../components/Drawer/Drawer\";\n\nclass Layout extends Component {\n\n  state = {\n    isMenuOpen: false\n  };\n\n  handlerToggleMenu = () => {\n    this.setState(state => {\n      return {\n        isMenuOpen: !state.isMenuOpen\n      }\n    })\n  };\n\n  handleBackDrop = () => {\n    this.setState({isMenuOpen: false})\n  };\n\n  render() {\n    const {isMenuOpen} = this.state;\n\n    return (\n      <div className=\"Layout\">\n        <Drawer\n          isOpen={isMenuOpen}\n          handleBackDrop={this.handleBackDrop}\n        />\n        <MenuToggle\n          onToggle={this.handlerToggleMenu}\n          isOpen={isMenuOpen}\n        />\n        <main className=\"Layout__Main\">\n          { this.props.children }\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default Layout;\n","import React from 'react';\nimport './AnswerItem.sass';\nimport className from 'classnames';\n\nconst AnswerItem = ({answer, onAnswerClickHandle, state}) => {\n\n  return (\n    <li\n      className={\n        className({\n          'AnswerItem': true,\n          'AnswerItem--Success': state === 'success',\n          'AnswerItem--Error': state === 'error',\n        })\n      }\n      onClick={() => onAnswerClickHandle(answer.id)}\n    >\n      {answer.text}\n    </li>\n  );\n};\n\nexport default AnswerItem;\n","import React from 'react';\nimport './AnswersList.sass';\nimport AnswerItem from \"../AnswerItem/AnswerItem\";\n\nconst AnswersList = ({answers, onAnswerClickHandle, state}) => {\n  return (\n    <div>\n      <ul className=\"AnswersList\">\n        {\n          answers.map((answer, index) => {\n            return <AnswerItem\n              answer={answer}\n              key={index}\n              onAnswerClickHandle={onAnswerClickHandle}\n              state={state ? state[answer.id] : null}\n            />\n          })\n        }\n      </ul>\n    </div>\n  );\n};\n\nexport default AnswersList;\n","import React from 'react';\nimport './ActiveQuiz.sass';\nimport AnswersList from \"../AnswersList/AnswersList\";\n\nconst ActiveQuiz = ({answers, question, onAnswerClickHandle, answerNumber, quizLength, state}) => {\n\n  return (\n    <div className=\"ActiveQuiz\">\n      <p className=\"ActiveQuiz__Question\">\n        <span>\n          <strong>{answerNumber}</strong>\n          &nbsp;\n          {question}\n        </span>\n\n        <small>{answerNumber} из {quizLength}</small>\n      </p>\n\n      <AnswersList\n        answers={answers}\n        onAnswerClickHandle={onAnswerClickHandle}\n        state={state}\n      />\n    </div>\n  );\n};\n\nexport default ActiveQuiz;\n","import React from 'react';\nimport './Button.sass';\nimport classNames from 'classnames';\n\nconst Button = (props) => {\n  const {customClass, onClick, disabled} = props;\n\n  return (\n    <button\n      onClick={onClick}\n      className={classNames({\n        'Button': true,\n        [`Button--${customClass}`]: !!customClass\n      })}\n      disabled={disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport './FinishedQuiz.sass';\nimport classNames from 'classnames';\nimport Button from \"../UI/Button/Button\";\nimport {Link} from \"react-router-dom\";\n\nconst FinishedQuiz = ({results, quiz, onRetry}) => {\n\n  const counterOfSuccess = () => {\n    let counter = 0;\n    for(let key in results){\n      if(results[key] === 'success'){\n        counter ++\n      }\n    }\n    return counter\n  }\n\n  return (\n    <div className=\"FinishedQuiz\">\n      <h1>Результат:</h1>\n       <ul>\n         {\n           quiz.map((quizItem, index) => {\n             return(\n               <li className=\"FinishedQuiz__Item\" key={index}>\n                 <strong>{index + 1}.&nbsp;</strong>\n                 {quizItem.question}\n                 <i className={classNames({\n                   'fa': true,\n                   'fa-times error': results[quizItem.id] === 'error',\n                   'fa-check success': results[quizItem.i] === 'success'\n                 })}></i>\n               </li>\n             )\n           })\n         }\n\n       </ul>\n      <p>\n        правильно&nbsp;\n        { counterOfSuccess() }\n        &nbsp;из&nbsp;\n        { quiz.length }\n      </p>\n      <div className=\"FinishedQuiz__Action\">\n       <Button\n        onClick={onRetry}\n        customClass=\"Primary\"\n       >\n        Повторить\n       </Button>\n       <Link to='/'>\n         <Button customClass=\"Success\">Перейти к списку тестов</Button>\n       </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default FinishedQuiz;\n","import React from 'react';\nimport './Loader.sass';\n\nconst Loader = () => {\n  return (\n    <div className=\"lds-facebook\">\n      <div/>\n      <div/>\n      <div/>\n    </div>\n  );\n};\n\nexport default Loader;\n","import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'https://guiz-eaa7e.firebaseio.com/'\n})\n","import axios from \"../../axiosInstance/axiosInstance\";\nimport {\n  FETCH_QUIZES_START,\n  FETCH_QUIZES_SUCCESS,\n  FETCH_QUIZES_ERROR,\n  FETCH_QUIZ_SUCCESS,\n  FETCH_QUIZ_ERROR,\n  QUIZ_SET_STATE, FINISH_QUIZ, QUIZ_NEXT_QUIZ, RETRY_QUIZ\n} from \"./actionsType\";\n\n\n//quizes-list\nexport function fetchQuizes() {\n  return async (dispatch) => {\n    dispatch(fetchQuizesStart)\n    try{\n      const response = await axios({\n        method: 'GET',\n        url: '/guizes.json'\n      });\n      const quizes = [];\n\n      Object.keys(response.data).map((item, index) => {\n        quizes.push( {\n          id: item,\n          name: `Тест №${index + 1}`\n        })\n      });\n\n      dispatch(fetchQuizesSuccess(quizes))\n\n    }catch(e){\n      fetchQuizesError(e)\n    }\n  }\n};\n\nexport function fetchQuizesStart() {\n  return {\n    type: FETCH_QUIZES_START\n  }\n};\n\nexport function fetchQuizesSuccess(quizes) {\n  return {\n    type: FETCH_QUIZES_SUCCESS,\n    payload: {\n      quizes\n    }\n  }\n};\n\nexport function fetchQuizesError(err) {\n  return {\n    type: FETCH_QUIZES_ERROR,\n    payload: {\n      error: err\n    }\n  }\n};\n\n\n\n//quiz-page\nexport function fetchQuizById(quizId) {\n\n  return async dispatch => {\n    dispatch(fetchQuizesStart());\n    try{\n      const response = await axios({\n        method: 'GET',\n        url: `/guizes/${quizId}.json`\n      });\n      const quiz = response.data;\n\n      dispatch(fetchQuizSuccess(quiz))\n    } catch(e){\n      dispatch(fetchQuizError(e))\n    }\n  }\n};\n\nexport function fetchQuizSuccess(quiz) {\n  return {\n    type: FETCH_QUIZ_SUCCESS,\n    payload: {\n      quiz\n    }\n  }\n};\n\nexport function quizAnswerClick(answerId) {\n  return (dispatch, getState) => {\n\n    const state = getState().quiz;\n\n    const { activeQuestion, quiz, answerState } = state;\n\n    if(answerState){\n      const key = Object.keys(answerState)[0];\n      if(answerState[key] === 'success') {\n        return;\n      }\n    };\n\n\n    let results = state.results;\n    const question = quiz[activeQuestion];\n\n\n    if(question.rightAnswerId == answerId){\n      if(!results[question.id]){\n        //запись результата\n        results[question.id] = 'success';\n      };\n\n      dispatch(quizSetState({[answerId]: 'success'}, results));\n\n      if(state.activeQuestion + 1 === state.quiz.length){\n        dispatch(finishQuiz());\n      }else {\n        dispatch(quizNextQuestion(state.activeQuestion + 1))\n      }\n    }else{\n      //запись результата\n      results[question.id] = 'error';\n      dispatch(quizSetState({[answerId]: 'error'}, results))\n    }\n  }\n};\n\nexport function quizSetState(answerState, results) {\n  return {\n    type: QUIZ_SET_STATE,\n    payload: {\n      answerState,\n      results\n    }\n  }\n};\n\nexport function finishQuiz() {\n  return{\n    type: FINISH_QUIZ\n  }\n};\n\nexport function quizNextQuestion(activeNumber) {\n  return {\n    type: QUIZ_NEXT_QUIZ,\n    payload: {\n      activeNumber\n    }\n  }\n};\n\nexport function retryQuiz(){\n  return {\n    type: RETRY_QUIZ\n  }\n}\n\n\n\n\nexport function fetchQuizError(error) {\n  return {\n    type: FETCH_QUIZ_ERROR,\n    payload: {\n      error\n    }\n  }\n}\n","export const FETCH_QUIZES_START = 'FETCH_QUIZES_START';\nexport const FETCH_QUIZES_SUCCESS = 'FETCH_QUIZES_SUCCESS';\nexport const FETCH_QUIZES_ERROR = 'FETCH_QUIZES_ERROR';\n\nexport const FETCH_QUIZ_SUCCESS = 'FETCH_QUIZ_SUCCESS';\nexport const FETCH_QUIZ_ERROR = 'FETCH_QUIZ_ERROR';\n\nexport const QUIZ_SET_STATE = 'QUIZ_SET_STATE';\nexport const FINISH_QUIZ = 'FINISH_QUIZ';\nexport const QUIZ_NEXT_QUIZ = 'QUIZ_NEXT_QUIZ';\nexport const RETRY_QUIZ = 'RETRY_QUIZ';\n\nexport const CREATE_QUIZ_QUESTION = 'CREATE_QUIZ_QUESTION';\nexport const FINISH_CREATE_QUIZ = 'FINISH_CREATE_QUIZ';\nexport const RESET_QUIZ_CREATION = 'RESET_QUIZ_CREATION';\n","import React, {Component} from 'react';\nimport './Quize.sass';\nimport ActiveQuiz from \"../../components/ActiveQuiz/ActiveQuiz\";\nimport FinishedQuiz from \"../../components/FinishedQuiz/FinishedQuiz\";\nimport Loader from \"../../components/UI/Loader/Loader\";\nimport { connect } from 'react-redux';\nimport {fetchQuizById, quizAnswerClick, retryQuiz} from \"../../store/actions/quize\";\n\nclass Quiz extends Component {\n\n  componentDidMount() {\n    const { fetchQuizById } = this.props;\n    const id = this.props.match.params.id;\n    fetchQuizById(id);\n  };\n\n  componentWillUnmount() {\n    const { retryQuiz } = this.props;\n    retryQuiz();\n  }\n\n  render() {\n    const {\n      quiz,\n      isFinished,\n      activeQuestion,\n      answerState,\n      results,\n      isLoading,\n      quizAnswerClick,\n      retryQuiz\n    } = this.props;\n\n    if(isLoading || !quiz){\n      return <Loader/>\n    }\n    console.log(results, 'results');\n    return (\n      <div className=\"Quiz\">\n        <div className=\"Quiz__Wrapper\">\n          {\n            isFinished\n              ? <FinishedQuiz\n                  results={results}\n                  quiz={quiz}\n                  onRetry={retryQuiz}\n                />\n              : <>\n                <h1 className=\"Quiz__Title\">Ответьте на все вопросы</h1>\n                <ActiveQuiz\n                  answers={quiz[activeQuestion].answers}\n                  question={quiz[activeQuestion].question}\n                  onAnswerClickHandle={quizAnswerClick}\n                  quizLength={quiz.length}\n                  answerNumber={activeQuestion + 1}\n                  state={answerState}\n                />\n                </>\n          }\n        </div>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = state => {\n  const { quiz } = state;\n  return {\n    activeQuestion: quiz.activeQuestion,\n    answerState: quiz.answerState,\n    isFinished: quiz.isFinished,\n    results: quiz.results,\n    quiz: quiz.quiz,\n    loading: quiz.loading\n  }\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchQuizById: id => dispatch(fetchQuizById(id)),\n    quizAnswerClick: answerId => dispatch(quizAnswerClick(answerId)),\n    retryQuiz: () => dispatch(retryQuiz())\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz);\n","import React from 'react';\nimport './Input.sass';\nimport classNames from 'classnames';\n\n\n\nconst Input = ({\n                 type = 'text',\n                 customClass,\n                 label,\n                 value,\n                 onChange,\n                 errorMessage,\n                 touched,\n                 shouldValidate,\n                 valid\n              }) => {\n\n  const isInvalid = (valid, touched, shouldValidate) => {\n    return !valid && shouldValidate && touched;\n  };\n\n  const htmlFor = `${type}--${Math.random()}`;\n\n  return (\n    <div className={classNames({\n      'Input': true,\n      [`Input--${customClass}`]: !!customClass,\n      'Input--Error': isInvalid()\n    })}>\n      <label\n        htmlFor={htmlFor}\n        className=\"Input__Label\"\n      >\n        { label }\n      </label>\n      <input\n        type={type}\n        id={htmlFor}\n        value={value}\n        onChange={onChange}\n        className=\"Input__Field\"\n      />\n      {\n        touched && !valid && <span className=\"Input__Error\">{errorMessage}</span>\n      }\n    </div>\n  );\n};\n\nexport default Input;\n","import React, {Component} from 'react';\nimport './Auth.sass'\nimport Button from \"../../components/UI/Button/Button\";\nimport Input from \"../../components/UI/Input/Input\";\nimport axios from 'axios';\n\nconst validateEmail = email => {\n  const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n}\n\nclass Auth extends Component {\n\n  state = {\n    isFromValid: \"false\",\n    formControls: {\n      email: {\n        value: '',\n        type: 'email',\n        label: 'Email',\n        errorMessage: 'Введите корректный email',\n        valid: false,\n        touched: false,\n        validationRules: {\n          required: true,\n          minLength: null,\n          email: true\n        }\n      },\n      password: {\n        value: '',\n        type: 'password',\n        label: 'Пароль',\n        errorMessage: 'Введите корректный пароль',\n        valid: false,\n        touched: false,\n        validationRules: {\n          required: true,\n          minLength: 6,\n          email: null\n        }\n      },\n    }\n  };\n\n  handlerLogin = async () => {\n    const { formControls: { email, password }} = this.state;\n    const data = {\n      email: email.value,\n      password: password.value,\n      returnSecureToken: true\n    };\n    try{\n      const response = await axios({\n        method: 'POST',\n        url: 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyC4MBxNODL4UYY1cjbnUQIDZPNnBv6F0xY',\n        data\n      })\n    }catch(e){\n      console.log(e);\n    }\n  };\n\n  handlerRegister = async () => {\n    const { formControls: { email, password }} = this.state;\n    const data = {\n      email: email.value,\n      password: password.value,\n      returnSecureToken: true\n    };\n    try{\n      const response = await axios({\n        method: 'POST',\n        url: 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyC4MBxNODL4UYY1cjbnUQIDZPNnBv6F0xY',\n        data\n      })\n    }catch(e){\n      console.log(e);\n    }\n  };\n\n  handlerSubmit = e => {\n    e.preventDefault();\n  };\n\n  handlerOnChange = (value, controlName) => {\n\n    const formControls = {...this.state.formControls};\n    const control = {...formControls[controlName] };\n\n    control.value = value;\n    control.touched = true;\n    control.valid = this.validateControl(control.value, control.validationRules);\n\n    //проверка полей на валидность с установкой флага\n    let isFromValid = true;\n    for(let key in formControls){\n      isFromValid = formControls[key].valid && isFromValid;\n    }\n\n    formControls[controlName] = control;\n    this.setState({\n      formControls,\n      isFromValid\n    })\n  };\n\n  validateControl = (value, validationRules) => {\n    if(!validationRules) return true;\n    let isValid = true;\n\n    if(validationRules.required){\n      isValid = value.trim() !== '' && isValid;\n    };\n\n    if(validationRules.email) {\n      isValid = validateEmail(value) && isValid;\n    };\n\n    if(validationRules.minLength) {\n      isValid = value.length >= validationRules.minLength && isValid;\n    };\n\n    return isValid;\n  };\n\n  render() {\n    const {formControls: {email, password}, isFromValid} = this.state;\n    return (\n      <div className=\"Auth\">\n        <div className=\"Auth__Wrap\">\n          <h1 className=\"Auth__Title\">Аворизация</h1>\n          <form onSubmit={this.handlerSubmit} className=\"Auth__Form\">\n            <Input\n              type={email.type}\n              value={email.value}\n              valid={email.valid}\n              touched={email.touched}\n              label={email.label}\n              onChange={(e) => this.handlerOnChange(e.target.value, email.type)}\n              shouldValidate={true}\n              errorMessage={email.errorMessage}\n            />\n            <Input\n              type={password.type}\n              label={password.label}\n              value={password.value}\n              onChange={(e) => this.handlerOnChange(e.target.value, password.type)}\n              touched={password.touched}\n              errorMessage={password.errorMessage}\n              valid={password.valid}\n              shouldValidate={true}\n            />\n            <div className=\"Auth__Actions\">\n              <Button\n                customClass=\"Success\"\n                onClick={this.handlerLogin}\n                disabled={!isFromValid ? 'disabled': ''}\n              >\n                Войти\n              </Button>\n              <Button\n                customClass=\"Primary\"\n                onClick={this.handlerRegister}\n                disabled={!isFromValid ? 'disabled': ''}\n              >\n                Зарегистрироваться\n              </Button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Auth;\n","function createControl(config, validation) {\n  return {\n    ...config,\n    validation,\n    valid: !validation,\n    touched: false,\n    value: ''\n  }\n}\n\nfunction validate(value, validation = null){\n  if(!validation) return true;\n  let isValid = true;\n  if(validation.required){\n    isValid = value.trim() !== '' && isValid\n  }\n  return isValid;\n};\n\nfunction validateForm(formControls) {\n  let isFormValid = true;\n\n  for(let control in formControls){\n    if(formControls.hasOwnProperty(control)){\n      isFormValid = formControls[control].valid && isFormValid;\n    }\n  }\n\n  return isFormValid;\n}\n\nexport {\n  createControl,\n  validate,\n  validateForm\n}\n","import React from 'react';\nimport './Select.sass';\n\nconst Select = ({label, value, onChange, options}) => {\n  const htmlFor = `${label}--${Math.random()}`;\n\n  return (\n    <div className=\"Select\">\n      <label htmlFor={htmlFor} className=\"Select__Label\">{ label }</label>\n      <select\n        value={value}\n        onChange={e => onChange(e.target.value)}\n        id={htmlFor}\n        accessKey={'t'}\n        className=\"Select__Select\"\n      >\n        {\n          options.map((option, index) => {\n            return (\n              <option key={index} value={option.value}>\n                { option.text }\n              </option>\n            )\n          })\n        }\n      </select>\n    </div>\n  );\n};\n\nexport default Select;\n","import React, {Component} from 'react';\nimport './QuizCreator.sass';\nimport Button from \"../../components/UI/Button/Button\";\nimport { createControl, validate, validateForm } from '../../form/formFramework';\nimport Input from \"../../components/UI/Input/Input\";\nimport Select from \"../../components/UI/Select/Select\";\nimport { connect } from 'react-redux';\nimport { createQuizQuestion, finishCreateQuiz } from '../../store/actions/create';\n\nfunction createFormControls(){\n  return {\n    question: createControl({\n      label: 'Введите вопрос',\n      errorMessage: 'Вопрос не может быть пустым',\n    }, {required: true}),\n    option1: createControl({\n      label: 'Вариант 1',\n      errorMessage: 'Значение не может быть пустым',\n      id: 1,\n    }, {required: true}),\n    option2: createControl({\n      label: 'Вариант 2',\n      errorMessage: 'Значение не может быть пустым',\n      id: 2,\n    }, {required: true}),\n    option3: createControl({\n      label: 'Вариант 3',\n      errorMessage: 'Значение не может быть пустым',\n      id: 3,\n    }, {required: true}),\n    option4: createControl({\n      label: 'Вариант 4',\n      errorMessage: 'Значение не может быть пустым',\n      id: 4,\n    }, {required: true}),\n  }\n}\n\nclass QuizCreator extends Component {\n\n  state = {\n    rightAnswerId: 1,\n    isFormValid: false,\n    formControls: createFormControls()\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n  };\n\n  handlerAddQuestion = (e) => {\n    e.preventDefault();\n    const { createQuizQuestion } = this.props;\n    const {formControls: {question, option1, option2, option3, option4}, rightAnswerId} = this.state;\n    const quiz = [ ...this.props.quiz];\n    const quizIndex = quiz.length + 1;\n\n    const questionItem = {\n      id: quizIndex,\n      question: question.value,\n      rightAnswerId,\n      answers: [\n        { text: option1.value, id: option1.id },\n        { text: option2.value, id: option2.id },\n        { text: option3.value, id: option3.id },\n        { text: option4.value, id: option4.id },\n      ]\n    };\n\n    createQuizQuestion(questionItem);\n\n    this.setState({\n      rightAnswerId: null,\n      isFormValid: false,\n      formControls: createFormControls()\n    })\n  };\n\n  handlerCreateQuestion = () => {\n    const { finishCreateQuiz } = this.props;\n\n    finishCreateQuiz();\n\n    this.setState({\n      rightAnswerId: 1,\n      isFormValid: false,\n      formControls: createFormControls()\n    })\n\n  };\n\n  renderInputs = () => {\n    const { formControls } = this.state;\n\n    return  Object.keys(formControls).map((controlName, index) => {\n      const currentControl = formControls[controlName];\n      return (\n        <div key={index}>\n          <Input\n            label={currentControl.label}\n            value={currentControl.value}\n            valid={currentControl.valid}\n            shouldValidate={!!currentControl.validation}\n            touched={currentControl.touched}\n            errorMessage={currentControl.errorMessage}\n            onChange={e => this.handlerChangeInput(e.target.value, controlName)}\n          />\n          { index === 0 && <hr/> }\n        </div>\n      )\n    })\n  };\n\n  handlerChangeInput = (value, controlName) => {\n    const { formControls } = this.state;\n    const currentControl = formControls[controlName];\n\n    currentControl.touched = true;\n    currentControl.value = value;\n    currentControl.valid = validate(currentControl.value, currentControl.validation);\n\n    formControls[controlName] = currentControl;\n\n    this.setState({\n      formControls: formControls,\n      isFormValid: validateForm(formControls),\n    })\n  };\n\n  handlerSelectChange = (value) => {\n    this.setState({rightAnswerId: value})\n  };\n\n\n  render() {\n    const { rightAnswer } = this.state;\n    const { quiz } = this.props;\n\n    return (\n      <div className=\"QuizCreator\">\n        <div className=\"QuizCreator__Container\">\n          <h1 className=\"QuizCreator__Title\">\n            Создание теста\n          </h1>\n          <form\n            onSubmit={this.handleSubmit}\n            className=\"QuizCreator__Form\"\n          >\n            {\n              this.renderInputs()\n            }\n            <Select\n              label={\"Выберите правильный объект\"}\n              value={rightAnswer}\n              onChange={this.handlerSelectChange}\n              options={[\n                {text: '1', value: 1},\n                {text: '2', value: 2},\n                {text: '3', value: 3},\n                {text: '4', value: 4},\n              ]}\n            />\n            <hr/>\n            <div className=\"QuizCreator__Actions\">\n              <Button\n                customClass=\"Primary\"\n                onClick={this.handlerAddQuestion}\n                disabled={!this.state.isFormValid}\n              >\n                Добавить вопрос\n              </Button>\n              <Button\n                customClass=\"Success\"\n                onClick={this.handlerCreateQuestion}\n                disabled={quiz.length === 0}\n              >\n                Создать тест\n              </Button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    quiz: state.create.quiz\n  }\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createQuizQuestion: (item) => dispatch(createQuizQuestion(item)),\n    finishCreateQuiz: () => dispatch(finishCreateQuiz())\n  }\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(QuizCreator);\n","import {\n  CREATE_QUIZ_QUESTION,\n  FINISH_CREATE_QUIZ,\n  RESET_QUIZ_CREATION\n} from \"./actionsType\";\nimport axios from \"../../axiosInstance/axiosInstance\";\n\n\nexport function createQuizQuestion(item) {\n  return {\n    type: CREATE_QUIZ_QUESTION,\n    payload: {\n      item\n    }\n  }\n};\n\nexport function finishCreateQuiz() {\n  console.log('here');\n  return async (dispatch, getState) => {\n    const state = getState().create;\n    console.log(state, 'state+++++++++++++');\n    await axios({\n      method: 'POST',\n      url: 'guizes.json',\n      data: {\n        ...state.quiz,\n        ...state.rightAnswerId\n      }\n    });\n    resetQuizCreation()\n  }\n};\n\n\nexport function resetQuizCreation(){\n  return {\n    type: RESET_QUIZ_CREATION\n  }\n}\n","import React, {Component} from 'react';\nimport './QuizList.sass';\nimport {NavLink} from \"react-router-dom\";\nimport Loader from \"../../components/UI/Loader/Loader\";\nimport { connect } from 'react-redux';\nimport {fetchQuizes} from \"../../store/actions/quize\";\n\nclass QuizList extends Component {\n\n  componentDidMount() {\n    const { fetchQuizes } = this.props;\n    fetchQuizes();\n  };\n\n  render() {\n    const { quizes,loading } = this.props;\n\n    return (\n      <div className=\"QuizList\">\n        <h1 className=\"QuizList__Title\">Список тестов</h1>\n        {\n          loading && quizes.length\n            ? <Loader/>\n            : (\n              <ul className=\"QuizList__List\">\n                {\n                  quizes.map(quiz => {\n                    return (\n                      <li key={quiz.id} className=\"QuizList__Item\">\n                        <NavLink to={`/quiz/${quiz.id}`} className=\"QuizList__Link\">\n                          { quiz.name }\n                        </NavLink>\n                      </li>\n                    )\n                  })\n                }\n              </ul>\n            )\n        }\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    quizes: state.quiz.quizes,\n    loading: state.quiz.loading,\n  }\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchQuizes: () => {dispatch(fetchQuizes())}\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps)\n(QuizList)\n","import React from 'react';\nimport Layout from \"./hoc/Layout/Layout\";\nimport Quiz from \"./containers/Quize/Quiz\";\nimport {Route, Switch} from 'react-router-dom';\nimport Auth from \"./containers/Auth/Auth\";\nimport QuizCreator from \"./containers/QuizCreator/QuizCreator\";\nimport QuizList from \"./containers/QuizList/QuizList\";\n\nfunction App() {\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/auth\" component={Auth}/>\n        <Route path=\"/quiz-creator\" component={QuizCreator}/>\n        <Route path=\"/quiz/:id\" component={Quiz}/>\n        <Route path=\"/\" component={QuizList}/>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\n  FETCH_QUIZ_ERROR,\n  FETCH_QUIZ_SUCCESS,\n  FETCH_QUIZES_ERROR,\n  FETCH_QUIZES_START,\n  FETCH_QUIZES_SUCCESS, FINISH_QUIZ, QUIZ_NEXT_QUIZ, QUIZ_SET_STATE, RETRY_QUIZ\n} from \"../actions/actionsType\";\n\nconst initialState = {\n  quizes: [],\n  loading: false,\n  error: null,\n  activeQuestion: 0,\n  answerState: {},\n  isFinished: false,\n  results: {},   //{[id]: success or error}\n  quiz: null,\n};\n\nexport default function quizReducer(state=initialState, action){\n  switch (action.type) {\n\n    case FETCH_QUIZES_START: {\n      return {\n        ...state,\n        loading: true\n      }\n    };\n\n    case FETCH_QUIZES_SUCCESS: {\n      return {\n        ...state,\n        loading: false,\n        quizes: action.payload.quizes\n      }\n    };\n\n    case FETCH_QUIZES_ERROR: {\n      return {\n        ...state,\n        loading: false,\n        error: action.payload.err\n      }\n    };\n\n    case FETCH_QUIZ_SUCCESS: {\n      return {\n        ...state,\n        loading: false,\n        quiz: action.payload.quiz\n      }\n    };\n\n    case FETCH_QUIZ_ERROR: {\n      return {\n        ...state,\n        loading: false,\n        error: action.payload.error\n      }\n    };\n\n    case QUIZ_SET_STATE: {\n      return {\n        ...state,\n        answerState: action.payload.answerState,\n        results: action.payload.results\n      }\n    };\n\n    case FINISH_QUIZ: {\n      return {\n        ...state,\n        isFinished: true\n      }\n    };\n\n    case QUIZ_NEXT_QUIZ: {\n      return {\n        ...state,\n        answerState: null,\n        activeQuestion: action.payload.activeNumber\n      }\n    };\n\n    case RETRY_QUIZ: {\n      return {\n        ...state,\n        activeQuestion: 0,\n        answerState: {},\n        isFinished: false,\n        results: {}\n      }\n    };\n\n    default: {\n      return {...state}\n    }\n  }\n}\n","import {CREATE_QUIZ_QUESTION, RESET_QUIZ_CREATION} from \"../actions/actionsType\";\n\nconst initialState = {\n  quiz: []\n};\n\nexport default function createQuizReducer(state = initialState, action){\n\n  switch(action.type){\n\n    case CREATE_QUIZ_QUESTION:\n      return {\n        ...state,\n        quiz: [...state.quiz, action.payload.item]\n      };\n\n    case RESET_QUIZ_CREATION:\n      return {\n        ...state,\n        quiz: []\n      };\n\n    default:\n      return {\n        ...state\n      }\n  }\n}\n","import { combineReducers } from 'redux';\nimport quizReducer from './quiz';\nimport createQuizReducer from './create';\n\nexport default combineReducers({\n  quiz: quizReducer,\n  create: createQuizReducer\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Provider } from 'react-redux';\nimport RootReducer from './store/reducers/rootReducer';\nimport thunk from 'redux-thunk';\n\n\nconst composeEnhancers =\n  typeof window === 'object' &&\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n      // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n    }) : compose;\n\nconst store = createStore(\n  RootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\n\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App/>\n    </BrowserRouter>\n  </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}